# Generated by Django 5.2.3 on 2025-07-30 03:24

import django.db.models.deletion
import webhook.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(help_text='Login uchun telefon raqami. +998901234567 formatda', max_length=20, unique=True)),
                ('username', models.CharField(blank=True, help_text='Ixtiyoriy username field', max_length=150, null=True)),
                ('is_active', models.BooleanField(default=True, help_text="User faolmi? False bo'lsa login qila olmaydi, soft delete uchun ishlatiladi")),
                ('is_staff', models.BooleanField(default=False, help_text="Django admin panelga kirish huquqi. True bo'lsa admin paneldan foydalana oladi")),
                ('is_superuser', models.BooleanField(default=False, help_text="Barcha ruxsatlarga ega. True bo'lsa hech qanday cheklovsiz admin huquqlari")),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text="User ro'yxatdan o'tgan sana-vaqt. Avtomatik o'rnatiladi")),
                ('last_login', models.DateTimeField(blank=True, help_text='Oxirgi marta login qilgan vaqt. Django avtomatik yangilaydi', null=True)),
                ('email', models.EmailField(blank=True, help_text='User emaili, notification va password reset uchun ishlatiladi', max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('latitude', models.FloatField(max_length=100)),
                ('longitude', models.FloatField(max_length=100)),
                ('is_new', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('condition', models.CharField(choices=[('new', 'Yangi'), ('used', 'Ishlatilgan')], max_length=50)),
                ('delivery', models.BooleanField(default=False)),
                ('warranty', models.CharField(blank=True, max_length=255, null=True)),
                ('rating', models.FloatField(default=0)),
                ('reviews', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webhook.category')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=webhook.models.user_directory_path)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='webhook.product')),
            ],
        ),
    ]
